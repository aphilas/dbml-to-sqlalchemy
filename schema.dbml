// general learning outcome
Table glo { 
  id int [pk, increment]
  desc text [not null]
}

// specific learning outcome
Table slo { 
  id int [pk, increment]
  glo_id int [default: null]
  ss_id int [not null]
  desc text [not null]
}

Ref: slo.glo_id > glo.id [ delete: set null, update: cascade ]
Ref: slo.ss_id > ss.id [ delete: restrict, update: cascade ]

Table learning_area as la {
  id int [pk, increment]
  la_name varchar(128) [unique, not null]
  
  indexes {
    la_name
  }     
}

// gr > la or la > gr?
Table grade as gr {
  gr_num int [pk] // 1, 2 ..., 12
  la_id int [not null]
  
  indexes {
    gr_num
  }
}

Ref: gr.la_id > la.id [delete: restrict, update: cascade]

Table strand as st {
  id int [pk, increment]
  gr_num int [not null]
  st_name varchar(256) [not null]
}

Ref: st.gr_num > gr.gr_num [delete: restrict, update: restrict]

Table substrand as ss {
  id int [pk, increment]
  st_id int [not null]
  ss_name varchar(256) [not null]
}

Ref: ss.st_id > st.id [delete: restrict, update: cascade]

Table indicator as ind {
  id int [pk, increment]
  ss_id int [not null]
  code varchar(256) [not null, unique] // from John's code
  desc text [not null]
}

Ref: ind.ss_id > ss.id [delete: restrict, update: cascade]

// co < sa
Table student_asst as sa {
  id int [pk, increment]
  asst_type student_asst_type [null, default: null]
  ref varchar(256) [null, note: 'link to assessment']
  level student_asst_level [null] // target strand/sub strand/grade
  co_id int [not null]
}

Ref: sa.co_id > co.id [delete: cascade, update: cascade]

Table publisher as pu {
  id int [pk, increment]
  pu_name varchar(128) [not null]
  email varchar(128) [null, unique]
  address text [null] // should be normalized
  desc text [null]
  
  indexes {
    pu_name
  }
}

Table technical_eval as te {
  id int [pk, increment]
  data_available bool [null]
  aggregate int [null] // user defined scale
  notes text [null]
  added datetime [not null, default: `now()`]
  modified datetime [null]
}

Table content_eval as ce {
  id int [pk, increment]
  difficulty content_difficulty [null] // appropriateness
  interactive result [null] // result(sccore, notes)
  assessment_feedback result [null, note: 'provides feedback on why answer is wrong']
  outcomes result [null, note: 'identifies learning outcomes']
  pictures result [null, note: 'pictures, diagrams and illustrations']
  teachers_guide result [null, note: 'teachers guide/answers for assessments']
  kicd result [null, note: 'approved by kicd']
  navigation result [null, note: 'navigation score'] //user defined scale?
  aggregate result [null, note: 'comprehensive score']
  status content_status [null, default: 'under_review']
  added datetime [not null, default: `now()`]
  modified datetime [null]
  
  indexes {
    added
    status
    aggregate
  }
}

Table content_obj as co {
  id int [pk, increment]
  co_type content_type [not null]
  pu_id int [not null]
  title varchar(256) [null]
  ref varchar(256) [null, note: 'link to content object']
  curr_type curriculum_type [null]
  published datetime [null]
  added datetime [not null, default: `now()`]
  modified datetime [null]
  
  indexes {
    pu_id
    published
  }
}

Ref: co.pu_id > pu.id [delete: restrict, update: cascade]

// content_obj <> specific_learning_outcome
Table co_slo {
  co_id int [not null]
  slo_id int [not null] 
  
  indexes {
    (co_id, slo_id) [pk]
  }
}

Ref: co_slo.co_id > co.id [delete: cascade, update: cascade]
Ref: co_slo.slo_id > slo.id [delete: cascade, update: cascade]

// content_obj <> tech_asst
Table co_te {
  co_id int [not null]
  te_id int [not null]
  
  indexes {
    (co_id, te_id) [pk]
  }
}

// delete all technical assessments before deleting content object!
Ref: co_te.co_id > co.id [delete: restrict, update: cascade]
Ref: co_te.te_id > te.id [delete: cascade, update: cascade]

// content_obj <> cont_asst
Table co_ce {
  co_id int [not null]
  ce_id int [not null]
  
  indexes {
    (co_id, ce_id) [pk]
  }
}

// delete all content assessments before deleting content object!
Ref: co_ce.co_id > co.id [delete: restrict, update: cascade]
Ref: co_ce.ce_id > ce.id [delete: cascade, update: cascade]

// student_asst <> indicator
Table sa_ind {
  sa_id int [not null]
  ind_id int [not null]
  
  indexes {
    (sa_id, ind_id) [pk]
  }
}

Ref: sa_ind.sa_id > sa.id [delete: cascade, update: cascade]
Ref: sa_ind.ind_id > ind.id [delete: cascade, update: cascade]

Enum result {
  score
  notes
}

// complex type ***
// create type result as (
//   score int,
//   notes text
// );

Enum student_asst_type {
  diagnostic
  formative
  summative
}

Enum curriculum_type {
  844
  CBC
  all
}

Enum content_type {
  test [note: 'container object for exams/quizzes']
  article
  video
  audio
  plain_text
  interactive
}

Enum content_status {
  archived
  approved // implicit from ce/te score?
  under_review
}

Enum content_difficulty {
  lacking
  normal
  advanced
}

Enum student_asst_level {
  learning_area
  grade
  strand
  substrand
  indicator
} 
